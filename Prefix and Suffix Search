class WordFilter {
public:
    unordered_map<string, int> um;
    WordFilter(vector<string>& words) {
        for(int k=0;k<words.size();k++){
            string word = words[k];
            for(int i=1;i<=10 && i<=word.size();i++){
                for(int j=1;j<=10 && j<=word.size();j++){
                    um[word.substr(0,i)+"#"+word.substr(word.size()-j,j)] = k;
                }
            }
        }
        
    }
    
    int f(string prefix, string suffix) {
        if(um.find(prefix+"#"+suffix)!=um.end()){
            return um[prefix+"#"+suffix];
        }
        else{
            return -1;
        }
    }
};

/**
 * Your WordFilter object will be instantiated and called as such:
 * WordFilter* obj = new WordFilter(words);
 * int param_1 = obj->f(prefix,suffix);
 */
