class Solution {
    bool row(int i, int j, char ch, vector<vector<char>> board){
        for(int k=0;k<9;k++){
            if(k!=j && board[i][k]==ch)
                return false;
        }
        return true;
    }
    
    bool col(int i, int j, char ch, vector<vector<char>> board){
        for(int k=0;k<9;k++){
            if(k!=i && board[k][j]==ch)
                return false;
        }
        return true;
    }
    
    bool box(int i, int j, char ch, vector<vector<char>> board){
        int p=i/3;
        int q=j/3;
        //cout<<i<<" "<<j<<endl;
        for(int k=3*p;k<3*(p+1);k++){
            for(int l=3*q;l<3*(q+1);l++)
                if((k!=i || l!=j) && board[k][l]==ch)
                    return false;
        }
        return true;
    }
    
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]=='.')
                    continue;
                //cout<<row(i,j,board[i][j],board)<<" "<<col(i,j,board[i][j], board)<<" "<<box(i,j,board[i][j], board)<<endl;
                if(!row(i,j,board[i][j],board) || !col(i,j,board[i][j], board) || !box(i,j,board[i][j], board))
                    return false;
            }
        }
        return true;
    }
};
