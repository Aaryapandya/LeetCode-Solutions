class AuthenticationManager {
    unordered_map<string, int> tokens;
    int t;
public:
    AuthenticationManager(int timeToLive) {
        t = timeToLive;
    }
    
    void generate(string tokenId, int currentTime) {
        tokens[tokenId] = currentTime;
    }
    
    void renew(string tokenId, int currentTime) {
        for(auto i: tokens){
            if(i.first == tokenId && (currentTime-i.second)<t){
                tokens[tokenId] = currentTime;
                break;
            }
        }
    }
    
    int countUnexpiredTokens(int currentTime) {
        int c=0;
        for(auto i: tokens){
            if((currentTime-i.second)<t)
                c++;
        }
        return c;
    }
};

/**
 * Your AuthenticationManager object will be instantiated and called as such:
 * AuthenticationManager* obj = new AuthenticationManager(timeToLive);
 * obj->generate(tokenId,currentTime);
 * obj->renew(tokenId,currentTime);
 * int param_3 = obj->countUnexpiredTokens(currentTime);
 */
