/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void diff(TreeNode* root, int minn, int maxx, int& res){
        if(root==nullptr)
            return;
        
        res = max(res, max(abs(root->val - minn), abs(root->val - maxx)));
        if(root->val < minn)
            minn = root->val;
        if(root->val > maxx)
            maxx = root->val;
        
        diff(root->left, minn, maxx, res);
        diff(root->right, minn, maxx, res);
    }
public:
    int maxAncestorDiff(TreeNode* root) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);
        
        int res=0;
        int minn = root->val;
        int maxx = root->val;
        diff(root, minn, maxx, res);
        
        return res;
    }
};
